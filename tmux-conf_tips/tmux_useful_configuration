
#############################################
< useful command configuration >
 - should be a file, ".tmux.conf"
#############################################

(case 1)
Your tmux configuration file should be named .tmux.conf and stored in your home directory. This is a regular text file and it's the key to adjusting tmux.

Just remember that after every modification, tmux must be refreshed to take new settings into account. This can be achieved either by restarting it or by typing in:

tmux source-file .tmux.conf

Let's start modifying .tmux.conf with a simple example.

# vim style movement
setw -g mode-keys vi

#
# Changing the Prefix
#
# As we said before, tmux uses the prefix to distinguish between commands sent to tmux itself and programs running inside of it. 
# As the default prefix (Ctrl+b) is pretty awkward, we'll replace it with Ctrl+a, which is both easier to use (a is located closer 
# to Ctrl than b) and time-honored, as the screen tool has been using it since a long time. To change the prefix, we need to open the .tmux.conf file and type in:

unbind C-b
set -g prefix C-a

#
# Pane switching with Alt+arrow
#
# For pane switching, Alt+arrow key combination (which is default in Terminator) worked fine for me and didn't cause any conflicts 
# so far, so I think it will work fine in tmux, too. But it is of course a matter of taste and you can use whatever key you want. 
# To switch panes with Alt, you can use these directives:

bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D


#
# Activity Monitoring
#
# If you have many tmux windows opened, you might want to get notified when something happens inside other windows. Pasting this:

setw -g monitor-activity on
set -g visual-activity on


# Highlighting Current Window Using Specified Colour
set-window-option -g window-status-current-bg yellow


# Pane Switching Using Mouse
set-option -g mouse-select-pane on


#
# .bashrc Problem
#
# I don't know how about you, but I like to keep a few tweaks in my rc file (.bashrc in case of bash shell). 
# However, with tmux the .bashrc file isn't read at all. After examining things a bit, I found out that tmux tries to read 
# .bash_profile instead of .bashrc. I won't mention rules standing behind it here as they are quite complicated, 
# I will show you a simple workaround instead. Adding this line:

source ~/.bashrc


#
# Scripting tmux
#
# My favourite pane layout often looks the same every time I use tmux, of course it depends on the type of work being done. 
# For example, working on a project may require a pane with source code, second for running tests and third one for tailing logs. 
# Setting these panes up is a perfect example of a dull task. Then it's not a surprise that in tmux it can be automated:

selectp -t 0 # select the first (0) pane
splitw -h -p 50 # split it into two halves
 
selectp -t 1 # select the new, second (1) pane
splitw -v -p 50 # split it into two halves
selectp -t 0 # go back to the first pane

# These commands should be saved in a separate file, e.g. .tmux/dev. In order to be able to run it, you should point to it from the .tmux.conf file:
bind D source-file ~/.tmux/dev

# From now on, pressing the prefix (Ctrl+b) followed by D (it's an uppercase character in this example, 
# so Shift is required) will execute commands located in the .tmux/dev file.


# It's also worth knowing that such file can do a little more than just opening the panes. It can also run commands inside them, for example:
splitw -h -p 50 'vim' # split current pane and run 'vim' command inside the new one





(case 2)
The cheat sheet has a few things that are specific to my configuration file, so to begin with, here is my ~/.tmux.conf file:

# use | and - to split the windows
bind-key | split-window -h
bind-key - split-window -v

# make the first window number start at 1
set -g base-index 1

# from http://endot.org/2011/12/06/my-tmux-configuration/
# keybindings to make resizing easier
bind -r C-h resize-pane -L
bind -r C-j resize-pane -D
bind -r C-k resize-pane -U
bind -r C-l resize-pane -R


# Mouse support - set to on if you want to use the mouse
* setw -g mode-mouse off
* set -g mouse-select-pane off
* set -g mouse-resize-pane off
* set -g mouse-select-window off

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# Center the window list
set -g status-justify centre

# Maximize and restore a pane
unbind Up bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp


