
Network Namespace - Host Sharing Internet Connection using NAT
==============================================================


1. iptable clear with -F (flush all)

    [root@vmware-005 python_test]# iptables -F
    [root@vmware-005 python_test]# iptables -L
    Chain INPUT (policy ACCEPT)
    target     prot opt source               destination

    Chain FORWARD (policy DROP)
    target     prot opt source               destination

    Chain OUTPUT (policy ACCEPT)
    target     prot opt source               destination
    ...

    Chain OUTPUT_direct (0 references)
    target     prot opt source               destination


2. basic network namespace configuration

 2.1 host side

    [root@vmware-005 python_test]# ip netns
    [root@vmware-005 python_test]# ip netns add ns1
    [root@vmware-005 python_test]# ip link add v-eth1 type veth peer name v-peer1
    [root@vmware-005 python_test]# ip link set v-peer1 netns ns1
    [root@vmware-005 python_test]# ip addr add 10.200.1.1/24 dev v-eth1
    [root@vmware-005 python_test]# ip link set v-eth1 up

 2.2 ns side

    [root@vmware-005 python_test]# ip netns exec ns1 ip addr add 10.200.1.2/24 dev v-peer1
    [root@vmware-005 python_test]# ip netns exec ns1 ip link set v-peer1 up
    [root@vmware-005 python_test]# ip netns exec ns1 ip link set lo up
    [root@vmware-005 python_test]# ip netns exec ns1 ip route add default via 10.200.1.1




3. NAT configuration


    [root@vmware-005 python_test]# echo 1 > /proc/sys/net/ipv4/ip_forward
    [root@vmware-005 python_test]# iptables -P FORWARD DROP
    [root@vmware-005 python_test]# iptables -F FORWARD
    [root@vmware-005 python_test]# iptables -t nat -F
    [root@vmware-005 python_test]# iptables -t nat -A POSTROUTING -s 10.200.1.0/255.255.255.0 -o eno16777984 -j MASQUERADE
    [root@vmware-005 python_test]# iptables -A FORWARD -i eno16777984 -o v-eth1 -j ACCEPT
    [root@vmware-005 python_test]# iptables -A FORWARD -o eno16777984 -i v-eth1 -j ACCEPT



4. Test 
    [root@vmware-005 python_test]# ip netns exec ns1 ping 8.8.8.8
    PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.
    64 bytes from 8.8.8.8: icmp_seq=1 ttl=38 time=14.1 ms
    64 bytes from 8.8.8.8: icmp_seq=2 ttl=38 time=13.9 ms
    64 bytes from 8.8.8.8: icmp_seq=3 ttl=38 time=15.8 ms
    ^C
    --- 8.8.8.8 ping statistics ---
    3 packets transmitted, 3 received, 0% packet loss, time 2002ms
    rtt min/avg/max/mdev = 13.980/14.667/15.888/0.876 ms

