
Docker Tips
===========

1. container id
    alias dl='docker ps -l -q'


2. docker image layers
    docker history ubuntu



3. quagga error message : privs_init: initial cap_set_proc failed 
    then  run the container with following switches
    docker run --privileged



4. bash into the running container 
    docker exec -it `dl` /bin/bash


5. log file location on each container

    directory: /var/lib/docker/containers/
    log file: less /var/lib/docker/containers/<ID>/<ID>-json.log

    --> docker logs <ID> can show the logs only
        docker logs -f


6. naming docker container 
    docker run --name <NAME>


7. docker run --net=<mode>  

    --network="bridge": Set the Network mode for the container
          'bridge'  :   create a network stack on the default Docker bridge 
          'host'    :   use the Docker host network stack. Note: the host mode gives the container full access 
                        to local system services such as D-bus and is therefore considered insecure. 


8. container command
    - To create a Container
        docker run -d ubuntu /bin/sh -c "while true; do echo hello world; sleep 1; done"

    - start stop restart attach 

    - copy file in a container to the host 
        cp: docker cp `dl`:/etc/passwd .

    - mount the directory in host to a container
        docker run -v /home/vagrant/test:/root/test ubuntu echo yo

    - delete
        docker rm `dl`

    - info of containers
        docker ps [-a]
        docker top `dl`
        docker inspect `dl`
        docker logs `dl`


9. docker image command

    - Pull a base image
        docker pull ubuntu

    - To create a image from a Container. For tag name, <username>/<imagename> is recommended
        docker run -d ubuntu /bin/sh -c "apt-get install -y hello"
        docker commit -m "My first container" `dl` tcnksm/hello

    - To create a image with Dockerfile.
        echo -e "FROM base\nRUN apt-get install hello\nCMD hello" > Dockerfile
        docker build tcnksm/hello .

    - To login to a image.
        docker run -rm -t -i tcnksm/hello /bin/bash
        To push a imges to remote repository. You need to sign up to Docker index in advance. Exmple uploaded image.

    - docker login
        docker push tcnksm/hello

    - To delete a image
        docker rmi tcnkms/hello

    - info of image
        To show all images
            docker images
        To show image information like IP adress.
            docker inspect tcnksm/hello
        To show command history of a image.
            docker history tcnksm/hello

 

10. set IP address to a docker container

    docker run --cap-add=NET_ADMIN -dit imagename /bin/sh -c "/sbin/ip addr add 172.17.0.12 dev eth0; bash"




11. Local Registry with self-signed Certificate
 --> refer to the file, docker_remote_registry




12. (QUESTION)
    Is it possible to use for granting quagga user (uid: 100) and quagga group(uid: 101) 
    to write into that directory in the situation of conflict of writing due to permission ??

    $ sudo setfacl -R -m u:100:rwx ~/volumes/quagga
    $ sudo setfacl -R -m g:101:rwx ~/volumes/quagga





13. pipework : Network between containers
    * download pipework:
        $ bash -c "curl https://raw.githubusercontent.com/jpetazzo/pipework/master/pipework" > pipework

    * to connect two routers using their containers names (R1 and R2):

        $ sudo ./pipework br0 R1 192.168.255.1/30                                                                                  
        $ sudo ./pipework br0 R2 192.168.255.2/30                                                                                  

    This command creates br0 bridge interface on host machine and 
    another network interface on each container which are connected to that br0 bridge.











