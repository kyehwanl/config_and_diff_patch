Net-emulabor
written by Kyehwan Lee

1. How to use
=============

  usage: ./net_emulator.py <option switch> [value]
  options: 
        -c, --count      : <value> instance_count
        -s, --start      : <value> start_point
        -b, --bgpsec     : bgpsec enable
        -d, --dry-run    : dry run test
        -n, --ns-only    : generate networkname space nodes only
        -f, --conf-only  : generate bgp configuration only
        -o, --output     : debug output enable/disable 
        -p, --path       : <path>, directory path for bgpd 
        -r, --remove     : <0|1>, to remove setting
        -x, --prefix     : <number>, the number of prefixes to be generated
        -S, --SKI        : <hex bytes>, SKI value 20 byte long hex
        -h, --help       : help screen



2. example 
==========

 (1) command: 
 net_emulator.py -c 100 -o -x 100 -p /opt/project/Quagga_test/Proces_Performance/quagga-1.2.0/bgpd/
 (the number of instance 100, output enabled, each node has 100 prefixes and program directory is followed by -p switch)


 (2) with a base configuration file, bgpd.conf.base, run bgpd on the base node (veth0, 10.1.1.1)
 "/opt/project/Quagga_test/Proces_Performance/quagga-1.2.0/bgpd/bgpd -f /opt/project/net_emul_test/test3/bgpd.conf.base -i /tmp/node0.pid"
 Then, the base node start peering with other 100 nodes.

 

3. connect an external observer
===============================

 (1) telnet into the base node and write the neighbor information on-the-fly

   [root@vmware-005 test3]# telnet 10.1.1.1 2605
   Password: 
   node1> en    
   node1# conf t
   node1(config)# router bgp 60001
   node1(config-router)# neighbor 10.0.50.11 remote-as 65011
   node1(config-router)# en
 
 (2) check
   node1# sh ip bgp summary 
   BGP router identifier 10.1.1.1, local AS number 60001
   RIB entries 10099, using 1105 KiB of memory
   Peers 101, using 896 KiB of memory

   Neighbor        V         AS MsgRcvd MsgSent   TblVer  InQ OutQ Up/Down  State/PfxRcd
   10.0.50.11      4 65011       0       0        0    0    0 never    Active     
   10.1.1.2        4 60002       5     104        0    0    0 00:01:59      100
   10.1.1.3        4 60003       5     104        0    0    0 00:01:59      100
   10.1.1.4        4 60004       5     104        0    0    0 00:01:59      100
   10.1.1.5        4 60005       5     104        0    0    0 00:01:59      100
   10.1.1.6        4 60006       5     104        0    0    0 00:01:59      100
   ...<snip>...
   10.1.1.101      4 60101       5     104        0    0    0 00:01:59      100

   Total number of neighbors 101

   Total num. Established sessions 100
   Total num. of routes received     10000
        


 (3) check with the external node (10.0.50.11)

    [root@vmware-005 test3]# telnet 10.0.50.11 2605
    Trying 10.0.50.11...
    Connected to 10.0.50.11.
    Escape character is '^]'.

    node11> sh ip bgp
    BGP table version is 0, local router ID is 10.0.50.11
    Status codes: s suppressed, d damped, h history, * valid, > best, = multipath,
                  i internal, r RIB-failure, S Stale, R Removed
    Origin codes: i - IGP, e - EGP, ? - incomplete

       Network          Next Hop            Metric LocPrf Weight Path
    *> 2.0.0.0          10.0.50.5                              0 60001 60002 i
    *> 2.0.0.0/9        10.0.50.5                              0 60001 60002 i
    *> 2.0.0.0/10       10.0.50.5                              0 60001 60002 i
    ...<snip>...
    *> 2.52.0.0/14      10.0.50.5                              0 60001 60002 i
    *> 2.56.0.0/13      10.0.50.5                              0 60001 60002 i
    node11> sh ip bgp su
    node11> sh ip bgp summary 
    BGP router identifier 10.0.50.11, local AS number 65011
    RIB entries 10103, using 1105 KiB of memory
    Peers 1, using 9088 bytes of memory

    Neighbor        V         AS MsgRcvd MsgSent   TblVer  InQ OutQ Up/Down  State/PfxRcd
    10.0.50.5       4 60001     102       5        0    0    0 00:00:21    10000

    Total number of neighbors 1

    Total num. Established sessions 1
    Total num. of routes received     10000
 



4. Remove All configuration
===========================

 [root@vmware-005 test3]# ./net_emulator.py -r 1
  +++ remove all setting called
  +++ remove network namespace instances
  +++ remove bridge interfaces
  +++ remove bridge:  br1
  +++ remove bgpd processes  




5. Example of Experiment command
================================

(c: instance, b: bgpsec enable, n: ns only, x: number of prefix, d: dry-run, p: bgpd path)

1. ns instantiate

    sudo ./net_emulator.py -c 2 -b -n -o -x 10  -d -p /opt/project/srx_test1/_inst/sbin/

     // TODO: ip netns exec ns1 ip route add default via 10.1.1.1



2. files generation command

    sudo ./net_emulator.py -c 2 -b -f -o -x 10 -d


3. logs
    vmware.005-antd [2001]{.../net_emul_test/net_emulator}-> sudo ./net_emulator.py -c 2 -b -n -o -x 10 -B 10.0.50.11 -d
    DRY-RUN Test Start


    -------------------------
    init count   : 2
    start point  : 0
    bgpsec       : True
    dry-run      : True
    conf-only    : False
    ns-only      : True
    num-Prefix   : 10
    path         : /opt/project/net_emul_test/net_emulator/
    remove       : False
    debug output : True
    base address : 10.0.50.11
    peer address : 10.1.1.
    conf type:   : quagga
    -------------------------

    [+] prerequisite tasks: check netns support
    [+] prerequisite tasks: check linux bridge instace
    command:  brctl show | grep br1 | awk '{print $1}'
    +++ bridge instance not exist --> configure bridge
    +++ bridge configuration start
     dry_run:  brctl addbr br1
     dry_run:  brctl stp br1 off
     dry_run:  ifconfig br1 10.1.1.1/24 up
    [+] network namespace setting and bgp running
    +++ create network namespace nodes [0]
     dry_run:  ip netns add ns0
     dry_run:  ip link add veth0 type veth peer name veth1
     dry_run:  ip link set veth1 netns ns0
     dry_run:  ip netns exec ns0 ifconfig lo up
     dry_run:  ip netns exec ns0 ifconfig veth1 10.1.1.2/24 up
     dry_run:  brctl addif br1 veth0
     dry_run:  ip link set dev veth0 up
    +++ run bgp routing [0]
     dry_run:  ip netns exec ns0 bash -c 'ifconfig;pwd'
     dry_run:  ip netns exec ns0 bash -c '/opt/project/net_emul_test/net_emulator/bgpd -f /opt/project/net_emul_test/net_emulator/bgpd.conf.n2.bgpsec -i /tmp/node2.pid -d'
     dry_run:  ps aux | grep bgp[d] | grep n2 | awk '{print $2}'

    +++ create network namespace nodes [1]
     dry_run:  ip netns add ns1
     dry_run:  ip link add veth2 type veth peer name veth3
     dry_run:  ip link set veth3 netns ns1
     dry_run:  ip netns exec ns1 ifconfig lo up
     dry_run:  ip netns exec ns1 ifconfig veth3 10.1.1.3/24 up
     dry_run:  brctl addif br1 veth2
     dry_run:  ip link set dev veth2 up
    +++ run bgp routing [1]
     dry_run:  ip netns exec ns1 bash -c 'ifconfig;pwd'
     dry_run:  ip netns exec ns1 bash -c '/opt/project/net_emul_test/net_emulator/bgpd -f /opt/project/net_emul_test/net_emulator/bgpd.conf.n3.bgpsec -i /tmp/node3.pid -d'
     dry_run:  ps aux | grep bgp[d] | grep n3 | awk '{print $2}'

